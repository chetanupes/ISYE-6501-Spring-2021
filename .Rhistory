temp<-data.table('temps.txt')
library(dplyr)
library(ggplot2)
library(dplyr)
temp<-data.table('temps.txt')
temp<-data.table('temps.txt',sep = "", header = TRUE)
temp<-read.table('temps.txt',sep = "", header = TRUE)
View(temp)
View(temp)
temp<-ts(temp)
View(temp)
View(temp)
library(data.table)
temp<-transpose(temp)
temp<-as.data.frame(t(temp))
View(temp)
View(temp)
temp<-read.table('temps.txt',sep = "", header = FALSE)
temp<-as.data.frame(t(temp))
View(temp)
View(temp)
temp<-read.table('temps.txt',sep = "", header = TRUE)
temp<-as.data.frame(t(temp))
View(temp)
View(temp)
library(ggplot2)
library(dplyr)
library(data.table)
temp<-read.table('temps.txt',sep = "", header = TRUE)
temp<-as.data.frame(t(temp))
View(temp)
View(temp)
View(temp)
View(temp)
temp<-read.table('temps.txt',sep = "", header = TRUE)
View(temp)
View(temp)
temp<-as.data.frame(t(temp))
View(temp)
View(temp)
View(temp)
View(temp)
temp<-read.table('Avg temp.csv',sep = "", header = TRUE)
temp<-read.csv('Avg temp.csv',sep = "", header = TRUE)
temp<-read.csv('Avg temp.csv',sep = "", header = TRUE)
View(temp)
View(temp)
temp<-read.csv('Avg temp.csv',sep = ",", header = TRUE)
View(temp)
View(temp)
temp<-ts.(temp)
plot.ts(temp)
temp<-ts(temp)
plot.ts(temp)
View(temp)
View(temp)
View(temp)
View(temp)
temp<-read.csv('Avg temp.csv',sep = ",", header = TRUE)
plot.ts(temp)
plot(temp)
View(temp)
View(temp)
plot(Year, Temperature)
plot(x=temp$Year, temp$Temperature)
plot(x=temp$Year, y=temp$Temperature)
plot(x=temp$Year, y=temp$Temperature)
View(temp)
View(temp)
install.packages("TTR")
b<-unlist(temp[,2:21])
library(ggplot2)
library(dplyr)
library(data.table)
temp<-read.csv('Avg temp.csv',sep = ",", header = TRUE)
plot(x=temp$Year, y=temp$Temperature)
b<-unlist(temp[,2:21])
View(temp)
View(temp)
temp<-read.csv('temp.txt',sep = ",", header = TRUE)
plot(x=temp$Year, y=temp$Temperature)
b<-unlist(temp[,2:21])
View(temp)
View(temp)
View(temp)
temp<-read.table('temp.txt',sep = ",", header = TRUE)
library(TTR)
temp<-read.table('temp.txt',sep = ",", header = TRUE)
temp<-read.table('temps.txt',sep = ",", header = TRUE)
plot(x=temp$Year, y=temp$Temperature)
b<-unlist(temp[,2:21])
View(temp)
View(temp)
temp<-read.table('temps.txt',sep = "", header = TRUE)
View(temp)
View(temp)
b<-unlist(temp[,2:21])
b<-as.vector(unlist(temp[,2:21]))
dt<-ts(b)
View(temp)
View(temp)
dt<-ts(b, start = 1996, frequency = 123)
plot.ts(dt)
plot(decompose(dt))
hw<-HoltWinters(dt, alpha = NULL, beta=NULL, gamma = NULL, seasonal = 'multiplicative')
hw
summary(hw)
hw$coefficients
hw$fitted
(hw$seasonal)
plot(hw$seasonal)
summary(hw)
plot(hw$fitted[,1])
plot(hw$fitted[,2])
plot(hw$fitted[,3])
plot(hw$fitted[,4])
back<-matrix(hw$fitted[,1], nrow = 123)
View(back)
View(back)
SMA(dt)
plot(SMA(dt))
plot(SMA(dt, n=5))
plot(SMA(dt, n=30))
?decompose
library(ggplot2)
library(TTR)
#Getting the data
temp<-read.table('temps.txt',sep = "", header = TRUE)
#Converting the data to make it ready for time series analysis. The code below
#puts the data in a long list containing the yearly data with temperatures
#for the four months
con<-as.vector(unlist(temp[,2:21]))
#Time series data
dt<-con(b, start = 1996, frequency = 123)
plot.ts(dt)
#Time series data
dt<-ts(con, start = 1996, frequency = 123)
plot.ts(dt)
#Decomposing the data to understand its components
plot(decompose(dt))
decom<-decompose(dt)
decom$seasonal
tt<-dt-decom$seasonal
tt
plot(tt)
#Decomposing the data to understand its components. This step helps to see how
#to use Holt Winters method.
plot(decompose(dt))
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = NULL, beta=NULL, gamma = NULL,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
hw$fitted
plot(hw)
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 0.5, beta=0.3, gamma = 0.2,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
plot(hw)
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 0.05, beta=0.3, gamma = 0.2,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
plot(hw)
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 0.2, beta=0.3, gamma = 0.2,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
plot(hw)
rms<-sqrt(sum((dt-hw$fitted)^2))
rms
diff<-dt-hw$fitted
diff
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 0.5, beta=0.3, gamma = 0.2,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
plot(hw)
diff<-dt-hw$fitted
diff
rms<-sqrt(sum((dt-hw$fitted)^2))
rms
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 1, beta=1, gamma = 1,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
plot(hw)
diff<-dt-hw$fitted
diff
rms<-sqrt(sum((dt-hw$fitted)^2))
rms
library(ggplot2)
library(TTR)
#Getting the data
temp<-read.table('temps.txt',sep = "", header = TRUE)
#Converting the data to make it ready for time series analysis. The code below
#puts the data in a long list containing the yearly data with temperatures
#for the four months
con<-as.vector(unlist(temp[,2:21]))
#Time series data
dt<-ts(con, start = 1996, frequency = 123)
#Plotting the time series data
plot.ts(dt)
#Decomposing the data to understand its components. This step helps to see how
#to use Holt Winters method.
plot(decompose(dt))
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 1, beta=1, gamma = 1,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
plot(hw)
diff<-dt-hw$fitted
diff
rms<-sqrt(sum((dt-hw$fitted)^2))
rms
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 0.5, beta=0.5, gamma = 0.5,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
plot(hw)
diff<-dt-hw$fitted
diff
rms<-sqrt(sum((dt-hw$fitted)^2))
rms
sum(diff^2)
sqrt(sum(diff^2))
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 0.5, beta=0, gamma = 0.5,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
plot(hw)
diff<-dt-hw$fitted
sqrt(sum(diff^2))
rms<-sqrt(sum((dt-hw$fitted)^2))
rms
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 0.5, beta=0, gamma = 1,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
plot(hw)
diff<-dt-hw$fitted
sqrt(sum(diff^2))
rms<-sqrt(sum((dt-hw$fitted)^2))
rms
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 0.5, beta=FALSE, gamma = 1,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
plot(hw)
diff<-dt-hw$fitted
sqrt(sum(diff^2))
rms<-sqrt(sum((dt-hw$fitted)^2))
rms
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 0.5, beta=FALSE, gamma = FALSE,
seasonal = 'multiplicative')
summary(hw)
hw$coefficients
plot(hw)
diff<-dt-hw$fitted
sqrt(sum(diff^2))
rms<-sqrt(sum((dt-hw$fitted)^2))
rms
hw$SSE
install.packages("forecast")
library(forecast)
library("forecast")
plot.forecast(hw)
library(forecast)
plot.forecast(hw)
fore<-forecast.HoltWinters(hw,h=8)
library("forecast")
fore<-forecast.HoltWinters(hw,h=8)
install.packages("forecast")
install.packages("forecast")
library(ggplot2)
library(TTR)
library("forecast")
#Getting the data
temp<-read.table('temps.txt',sep = "", header = TRUE)
#Converting the data to make it ready for time series analysis. The code below
#puts the data in a long list containing the yearly data with temperatures
#for the four months
con<-as.vector(unlist(temp[,2:21]))
#Time series data
dt<-ts(con, start = 1996, frequency = 123)
#Plotting the time series data
plot.ts(dt)
#Decomposing the data to understand its components. This step helps to see how
#to use Holt Winters method.
plot(decompose(dt))
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha = 0.5, beta=FALSE, gamma = FALSE,
seasonal = 'multiplicative')
summary(hw)
hw$SSE
plot(hw)
diff<-dt-hw$fitted
sqrt(sum(diff^2))
rms<-sqrt(sum((dt-hw$fitted)^2))
rms
library(forecast)
fore<-forecast.HoltWinters(hw, h=8)
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(log(dt), alpha = 0.5, beta=FALSE, gamma = 0.5,
seasonal = 'multiplicative')
summary(hw)
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(log(dt), alpha = 0.5, beta=FALSE, gamma = 0.5,
seasonal = 'multiplicative')
summary(hw)
hw$SSE
plot(hw)
diff<-dt-hw$fitted
sqrt(sum(diff^2))
rms<-sqrt(sum((dt-hw$fitted)^2))
rms
fore<-forecast.HoltWinters(hw, h=8)
sqrt(hw$SSE)
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(log(dt), alpha = 0.5, beta=FALSE, gamma = 0.5,
seasonal = 'multiplicative')
summary(hw)
sqrt(hw$SSE)
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(log(dt), alpha = None, beta=None, gamma = None,
seasonal = 'multiplicative')
?HoltWinters
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha =NULL , beta=NULL, gamma = NULL,
seasonal = 'multiplicative')
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt,
seasonal = 'multiplicative')
?HoltWinters
summary(hw)
sqrt(hw$SSE)
plot(hw)
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha =NULL , beta=NULL, gamma = NULL,
seasonal = 'additive')
?HoltWinters
summary(hw)
sqrt(hw$SSE)
plot(hw)
fore<-forecast.HoltWinters(hw, h=8)
#Decomposing the data to understand its components. This step helps to see how
#to use Holt Winters method.
plot(decompose(dt))
#Decomposing the data to understand its components. This step helps to see how
#to use Holt Winters method.
plot(decompose(log(dt)))
#Decomposing the data to understand its components. This step helps to see how
#to use Holt Winters method.
plot(decompose(dt))
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha =NULL , beta=FALSE, gamma = NULL,
seasonal = 'multiplicative')
summary(hw)
sqrt(hw$SSE)
plot(hw)
plot(hw$seasonal)
plot(hw$fitted[,1])
plot(hw$fitted[,2])
plot(hw$fitted[,3])
plot(hw$fitted[,4])
hw
summary(hw)
plot(hw$coefficients)
hw$coefficients
#Applying Holt Winter's method taking care of level, trend and seasonality
hw<-HoltWinters(dt, alpha =NULL , beta=FALSE, gamma = NULL,
seasonal = 'additive')
hw
summary(hw)
sqrt(hw$SSE)
hw$coefficients
fore<-forecast
plot.forecast(hw)
plot(hw$fitted[,1])
plot(hw)
library(ggplot2)
library(TTR)
library(forecast)
#Getting the data
temp<-read.table('temps.txt',sep = "", header = TRUE)
#Converting the data to make it ready for time series analysis. The code below
#puts the data in a long list containing the yearly data with temperatures
#for the four months
con<-as.vector(unlist(temp[,2:21]))
#Time series data
dt<-ts(con, start = 1996, frequency = 123)
#Plotting the time series data
plot.ts(dt)
#Decomposing the data to understand its components. This step helps to see how
#to use Holt Winters method.
plot(decompose(dt))
#Decomposing the data to understand its components. This step helps to see how
#to use Holt Winters method.
plot(decompose(dt, type = 'additive'))
#Decomposing the data to understand its components. This step helps to see how
#to use Holt Winters method.
plot(decompose(dt, type = 'additive'))
hw<-HoltWinters(dt, alpha =NULL , beta=NULL, gamma = NULL,
seasonal = 'additive')
hw
summary(hw)
sqrt(hw$SSE)
hw$coefficients
plot(hw)
fore<-forecast
hw<-HoltWinters(dt, alpha =NULL , beta=NULL, gamma = NULL,
seasonal = 'multiplicative')
hw
summary(hw)
sqrt(hw$SSE)
plot.forecast(hw)
plot(hw$fitted[,1])
plot(hw$fitted[,2])
plot(hw$fitted[,3])
plot(hw$fitted[,4])
plot(SMA(dt, n=30))
?HoltWinters
hw
summary(hw)
summary(hw$fitted)
summary(hw$fitted[,2])
summary(hw)
hw
hw$coefficients
hw$x
hw$fitted
summary(hw)
plot(hw$fitted[,4])
#Extracting the seasonality data as a matrix and exporting it into a csv
seas<-matrix(hw$fitted[,4], nrow = 123)
View(seas)
View(seas)
library(xlsx)
install.packages("xlsx")
library(xlsx)
write.xlsx(seas, "C:/Users/cheta/OneDrive/Desktop/Georgia Tech-Spring 2021
/ISYE 6501/Week 4/Assignment 4/seas.xlsx")
write.xlsx(seas, "C:/Users/cheta/OneDrive/Desktop/Georgia Tech-Spring 2021
/ISYE 6501/Week 4/Assignment4/seas.xlsx")
write.xlsx(seas, "C:/Users/cheta/OneDrive/Desktop/seas.xlsx")
View(temp)
View(temp)
