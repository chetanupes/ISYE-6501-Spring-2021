test<-read.table('test.txt', sep="", header = TRUE)
library(ggplot2)
library(outliers)
library(caret)
#Getting the training and test data
crime_data<-read.table('uscrime.txt', sep = "", header = TRUE )
test<-read.table('test.txt', sep="", header = TRUE)
#Scaling the data to fit the box plot in the plot
crime_scale<-scale(crime_data[,1:15])
out<-melt(crime_scale)
#Box plot to view the outliers
ggplot(out,aes(x=Var2, y=value))+geom_boxplot()
#Linear regression model 1 using cross validation
set.seed(123)
train.control <- trainControl(method = "cv", number = 10)
model<-train(Crime~.,data = crime_data, method='lm',  #Linear Model with CV
trControl=train.control)
summary(model)
plot(model$residuals)
plot(cooks.distance((model)))
model$coefnames
res<-predict(model, test)
summary(model)
min(crime_data$Crime)
max(crime_data$Crime)
#Linear regression model 1 using cross validation
set.seed(123)
train2.control <- trainControl(method = "cv", number = 10)
model2<-train(Crime~M,Ed,Po1,U2,Ineq,Prob,data = crime_data, method='lm',  #Linear Model with CV
trControl=train.control)
model2<-train(Crime~M,Ed,Po1,U2,Ineq,Prob,data = crime_data, method='lm',  #Linear Model with CV
trControl=train.control)
model2<-train(Crime~(M,Ed,Po1,U2,Ineq,Prob),data = crime_data, method='lm',  #Linear Model with CV
trControl=train.control)
model2<-train(Crime~M+Ed+Po1+U2+Ineq+Prob,data = crime_data, method='lm',  #Linear Model with CV
trControl=train.control)
summary(model2) # Model summary
pred<-predict(model2, test) #Prediction on test data
View(crime_data)
View(crime_data)
library(ggplot2)
library(outliers)
library(caret)
#Getting the training and test data
crime_data<-read.table('uscrime.txt', sep = "", header = TRUE )
test<-read.table('test.txt', sep="", header = TRUE)
#Scaling the data to fit the box plot in the plot
crime_scale<-scale(crime_data[,1:15])
out<-melt(crime_scale)
#Box plot to view the outliers
ggplot(out,aes(x=Var2, y=value))+geom_boxplot()
#Box plot to view the outliers
ggplot(crime_scale,aes(x=Var2, y=value))+geom_boxplot()
out<-melt(crime_scale)
aa<-cor(crime_data[,1:15])
View(aa)
plot(aa)
aa<-rcorr(as.matrix(crime_data[,1:15]))
aa<-rcorr(crime_data[,1:15])
install.packages("corrplot")
library(corrplot)
aa<-corrplot(crime_data[,1:15])
aa<-corrplot(cor(crime_data[,1:15]))
#Linear regression model 2 using cross validation
set.seed(123)
train2.control <- trainControl(method = "cv", number = 10)
model2<-train(Crime~M+Ed+Po1+U2+Ineq+Prob,data = crime_data, method='lm',  #Linear Model with CV
trControl=train.control)
library(ggplot2)
library(outliers)
library(caret)
library(corrplot)
#Getting the training and test data
crime_data<-read.table('uscrime.txt', sep = "", header = TRUE )
test<-read.table('test.txt', sep="", header = TRUE)
#Scaling the data to fit the box plot in the plot
crime_scale<-scale(crime_data[,1:15])
out<-melt(crime_scale)
#Box plot to view the outliers
ggplot(out,aes(x=Var2, y=value))+geom_boxplot()
#Linear regression model 1 using cross validation
set.seed(123)
train.control <- trainControl(method = "cv", number = 10)
model<-train(Crime~.,data = crime_data, method='lm',  #Linear Model with CV
trControl=train.control)
summary(model) # Model summary
pred<-predict(model, test) #Prediction on test data
#Linear regression model 2 using cross validation
set.seed(123)
train2.control <- trainControl(method = "cv", number = 10)
model2<-train(Crime~M+Ed+Po1+U2+Ineq+Prob,data = crime_data, method='lm',  #Linear Model with CV
trControl=train.control)
summary(model2) # Model summary
pred<-predict(model2, test) #Prediction on test data
plot(model2$r)
#Plotting residual vs fitted data to make sure there is no trend in the errors
res<-resid(model)
plot(fitted(model), res)
abline(0,0)
plot(model)
plot(model)
model3<-lm(Crime~.,data = crime_data)
plot(model3)
#Linear regression model
model1<-lm(Crime~.,data = crime_data)
summary(model1) # Model summary
pred<-predict(model, test) #Prediction on test data
#Plotting model results
plot(model1)
library(ggplot2)
library(outliers)
library(caret)
library(corrplot)
#Getting the training and test data
crime_data<-read.table('uscrime.txt', sep = "", header = TRUE )
test<-read.table('test.txt', sep="", header = TRUE)
#Scaling the data to fit the box plot in the plot
crime_scale<-scale(crime_data[,1:15])
out<-melt(crime_scale)
#Box plot to view the outliers
ggplot(out,aes(x=Var2, y=value))+geom_boxplot()
#Linear regression model
model1<-lm(Crime~.,data = crime_data)
summary(model1) # Model summary
pred<-predict(model, test) #Prediction on test data
#Plotting model results
plot(model1)
#Linear regression model 2
model2<-lm(Crime~M+Ed+Po1+U2+Ineq+Prob,data = crime_data)
library(ggplot2)
library(outliers)
library(caret)
library(corrplot)
#Getting the training and test data
crime_data<-read.table('uscrime.txt', sep = "", header = TRUE )
test<-read.table('test.txt', sep="", header = TRUE)
max(crime_data$Crime)
#Scaling the data to fit the box plot in the plot
crime_scale<-scale(crime_data[,1:15])
out<-melt(crime_scale)
#Box plot to view the outliers
ggplot(out,aes(x=Var2, y=value))+geom_boxplot()
#Linear regression model
model1<-lm(Crime~.,data = crime_data)
summary(model1) # Model summary
pred<-predict(model, test) #Prediction on test data
#Plotting model results
plot(model1)
trControl=train.control)
summary(model1a) # Model summary
pred1<-predict(model1a, test) #Prediction on test data
model1a<-train(Crime~.,data = crime_data, method='lm',  #Linear Model with CV
trControl=train.control)
#Linear regression model 1a using cross validation
set.seed(123)
train.control <- trainControl(method = "cv", number = 10)
model1a<-train(Crime~.,data = crime_data, method='lm',  #Linear Model with CV
trControl=train.control)
summary(model1a) # Model summary
pred1<-predict(model1a, test) #Prediction on test data
pred<-predict(model, test) #Prediction on test data
#Linear regression model
model1<-lm(Crime~.,data = crime_data)
summary(model1) # Model summary
pred<-predict(model, test) #Prediction on test data
pred<-predict(model1, test) #Prediction on test data
#Plotting residual vs fitted data to make sure there is no trend in the errors
res<-resid(model1a)
plot(fitted(model1a), res)
abline(0,0) #Adding a horizontal line
#Linear regression model 2
model2<-lm(Crime~M+Ed+Po1+U2+Ineq+Prob,data = crime_data)
summary(model2) # Model summary
pred2<-predict(model2, test) #Prediction on test data
#Plotting model results
plot(model2)
#Linear regression model 2 using cross validation
set.seed(123)
train2.control <- trainControl(method = "cv", number = 10)
model2a<-train(Crime~M+Ed+Po1+U2+Ineq+Prob,
data = crime_data, method='lm',  #Linear Model2 with CV
trControl=train.control)
summary(model2a) # Model summary
pred2a<-predict(model2a, test) #Prediction on test data
#Plotting residual vs fitted data to make sure there is no trend in the errors
res2<-resid(model2a)
plot(fitted(model2a), res2)
abline(0,0) #Adding a horizontal line
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
library(MASS)
library(ggplot2)
library(outliers)
library(caret)
library(corrplot)
library(MASS)
#Getting the training and test data
crime_data<-read.table('uscrime.txt', sep = "", header = TRUE )
test<-read.table('test.txt', sep="", header = TRUE)
max(crime_data$Crime)
#Scaling the data to fit the box plot in the plot
crime_scale<-scale(crime_data[,1:15])
out<-melt(crime_scale)
#Scaling the data to fit the box plot in the plot
crime_scale<-scale(crime_data[,1:15])
out<-melt(crime_scale)
library(reshape2)
#Scaling the data to fit the box plot in the plot
crime_scale<-scale(crime_data[,1:15])
out<-melt(crime_scale)
#Box plot to view the outliers
ggplot(out,aes(x=Var2, y=value))+geom_boxplot()
#Linear regression model
model1<-lm(Crime~.,data = crime_data)
summary(model1) # Model summary
pred<-predict(model1, test) #Prediction on test data
#Plotting model results
plot(model1)
#Linear regression model 1a using cross validation
set.seed(123)
train.control <- trainControl(method = "cv", number = 10)
model1a<-train(Crime~.,data = crime_data, method='lm',  #Linear Model with CV
trControl=train.control)
summary(model1a) # Model summary
pred1<-predict(model1a, test) #Prediction on test data
#Plotting residual vs fitted data to make sure there is no trend in the errors
res<-resid(model1a)
plot(fitted(model1a), res)
abline(0,0) #Adding a horizontal line
#Linear regression model 2
model2<-lm(Crime~M+Ed+Po1+U2+Ineq+Prob,data = crime_data)
summary(model2) # Model summary
pred2<-predict(model2, test) #Prediction on test data
#Plotting model results
plot(model2)
#Linear regression model 2 using cross validation
set.seed(123)
train2.control <- trainControl(method = "cv", number = 10)
model2a<-train(Crime~M+Ed+Po1+U2+Ineq+Prob,
data = crime_data, method='lm',  #Linear Model2 with CV
trControl=train.control)
summary(model2a) # Model summary
pred2a<-predict(model2a, test) #Prediction on test data
#Plotting residual vs fitted data to make sure there is no trend in the errors
res2<-resid(model2a)
plot(fitted(model2a), res2)
abline(0,0) #Adding a horizontal line
#The residual plot shows no pattern confirming that errors have no explanatory
#The residual plot shows no pattern confirming that errors have no explanatory
#power for the above model and this is what we want that the explanatory power
#The residual plot shows no pattern confirming that errors have no explanatory
#power for the above model and this is what we want that the explanatory power
#of the model resides with the predictors
library(MASS)
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
library(ggplot2)
library(outliers)
library(caret)
library(corrplot)
library(MASS)
library(reshape2)
#Getting the training and test data
crime_data<-read.table('uscrime.txt', sep = "", header = TRUE )
test<-read.table('test.txt', sep="", header = TRUE)
max(crime_data$Crime)
#Scaling the data to fit the box plot in the plot
crime_scale<-scale(crime_data[,1:15])
#Scaling the data to fit the box plot in the plot
crime_scale<-scale(crime_data[,1:15])
out<-melt(crime_scale)
#Box plot to view the outliers
ggplot(out,aes(x=Var2, y=value))+geom_boxplot()
#Linear regression model
model1<-lm(Crime~.,data = crime_data)
summary(model1) # Model summary
pred<-predict(model1, test) #Prediction on test data
#Plotting model results
plot(model1)
trControl=train.control)
summary(model1a) # Model summary
pred1<-predict(model1a, test) #Prediction on test data
#Plotting residual vs fitted data to make sure there is no trend in the errors
res<-resid(model1a)
plot(fitted(model1a), res)
abline(0,0) #Adding a horizontal line
#Linear regression model 2
model2<-lm(Crime~M+Ed+Po1+U2+Ineq+Prob,data = crime_data)
summary(model2) # Model summary
pred2<-predict(model2, test) #Prediction on test data
#Plotting model results
plot(model2)
data = crime_data, method='lm',  #Linear Model2 with CV
trControl=train.control)
summary(model2a) # Model summary
pred2a<-predict(model2a, test) #Prediction on test data
#Plotting residual vs fitted data to make sure there is no trend in the errors
res2<-resid(model2a)
plot(fitted(model2a), res2)
abline(0,0) #Adding a horizontal line
#Linear regression model 3 on full dataset
bc<-box
#Linear regression model 3 on full dataset
bc<-boxcox(model1, lambda = seq(-3,3))
#Getting best lambda
best<-bc$x[which((bc$y==max(bc$y)))]
#Now transforming the model
model1_tans<-lm(Crime^best~.,data = crime_data)
plot(model1_tans)
summary(model1_tans)
pre<-predict(model1_tans,test)
bc
#Linear regression model 3 on full dataset using model1
bc<-boxcox(model1)
#Getting best lambda
best<-bc$x[which((bc$y==max(bc$y)))]
#Now transforming the model
model1_tans<-lm(Crime^best~.,data = crime_data)
summary(model1_tans)
pre<-predict(model1_tans,test)
plot(model1_tans)
summary(model1_tans)
#predict
pr<-predict(bc)
#Linear regression model 3 on full dataset using model1
bc<-boxcox(model1)
#predict
pr<-predict(bc)
#predict
pr<-predict(bc,test)
plot(fitted(bc), resid(bc))
#Linear regression model 3 on full dataset using model1
bc<-boxcox(model1)
#Getting best lambda
best<-bc$x[which((bc$y==max(bc$y)))]
plot(fitted(bc), resid(bc))
#Linear regression model 3 on full dataset using model1
bc<-boxcox(model1,plotit = TRUE)
#Getting best lambda
best<-bc$x[which((bc$y==max(bc$y)))]
plot(fitted(bc), resid(bc))
#Now transforming the model
model1_tans<-lm(((Crime^best-best)/best)~.,data = crime_data)
summary(model1_tans)
pre<-predict(model1_tans)
plot(model1_tans)
pre<-predict(model1_tans, test)
par(mfrow=c(2,2))
plot(model1_tans)
#Getting best lambda
best<-bc$x[which(max(bc$y))]
#Getting best lambda
best<-bc$x[which.max(bc$y)]
#Now transforming the model
model1_tans<-lm(Crime^best~.,data = crime_data)
summary(model1_tans)
plot(model1_tans)
#Now transforming the model
model1_tans<-lm(Crime^0.5~.,data = crime_data)
summary(model1_tans)
pre<-predict(model1_tans, test)
X<-log(crime_data[,1:15])
View(X)
View(X)
View(X)
#Now transforming the model
model1_tans<-lm(log(Crime)~.,data = crime_data)
summary(model1_tans)
pre<-predict(model1_tans, test)
plot(model1_tans)
inv<-InvBoxCox(model1,best)
#Linear regression model 3 on full dataset using model1
model1_tans<-lm(log(Crime)~.,data = crime_data)
summary(model1_tans)
pre<-predict(model1_tans, test)
plot(model1_tans)
model3<-lm(log(Crime)~M+Ed+Po1+U2+Ineq+Prob,data = crime_data)
summary(model3) # Model summary
pred3<-predict(model3, test) #Prediction on test data
#Plotting model results
plot(model2)
model1_tans$residuals
sum(model1_tans$residuals)
sum(exp(model1_tans$residuals))
exp(ln(pre))*sum(exp(model1_tans$residuals))
ln(1)
ln1p(1)
exp(log(pre))*sum(exp(model1_tans$residuals))
exp(log(pre))*sum(exp(model1_tans$df.residual))
exp(log(pre))*sum(exp(model1_tans$coefficients[:2]))
model1_tans$coefficients[:2]
model1_tans$coefficients[,2]
model1_tans$coefficients
View(model1)
View(model1)
pre<-predict(model1_tans)
pre<-predict(model1_tans, test)
summary(model1_tans)
pre<-predict(model1_tans, test)
model3<-lm(log(Crime)~M+Ed+Po1+U2+Ineq+Prob,data = crime_data)
model1_tans$coefficients
summary(model3) # Model summary
pred3<-predict(model3, test) #Prediction on test data
exp(pred3)
library(ggplot2)
library(outliers)
library(caret)
library(corrplot)
library(MASS)
library(reshape2)
#Linear regression model 3 on full dataset using model1
model1_trans<-lm(log(Crime)~.,data = crime_data)
summary(model1_tans)
pre_trans<-predict(model1_trans, test)
#Converting prediction to the same scale
exp(pre_trans)
#Getting the training and test data
crime_data<-read.table('uscrime.txt', sep = "", header = TRUE )
test<-read.table('test.txt', sep="", header = TRUE)
max(crime_data$Crime)
#Scaling the data to fit the box plot in the plot
crime_scale<-scale(crime_data[,1:15])
out<-melt(crime_scale)
#Box plot to view the outliers
ggplot(out,aes(x=Var2, y=value))+geom_boxplot()
#Linear regression model
model1<-lm(Crime~.,data = crime_data)
#Linear regression model 3 on full dataset using model1
model1_trans<-lm(log(Crime)~.,data = crime_data)
summary(model1_tans)
pre_trans<-predict(model1_trans, test)
#Converting prediction to the same scale
exp(pre_trans)
#Plotting model results
plot(model1_tans)
#Linear regression model on smaller dataset
modela_trans<-lm(log(Crime)~M+Ed+Po1+U2+Ineq+Prob,data = crime_data)
summary(modela_trans) # Model summary
pred_trans1<-predict(modela_trans, test) #Prediction on test data
#Converting prediction to the same scale
exp(pre_trans1)
#Plotting model results
plot(model2)
#Plotting model results
plot(modela_trans)
#Converting prediction to the same scale
final<-exp(pre_trans)
#Plotting model results
plot(model1_tans)
#Linear regression model on smaller dataset
modela_trans<-lm(log(Crime)~M+Ed+Po1+U2+Ineq+Prob,data = crime_data)
summary(modela_trans) # Model summary
pred_trans1<-predict(modela_trans, test) #Prediction on test data
#Converting prediction to the same scale
final1<-exp(pre_trans1)
#Converting prediction to the same scale
final1<-exp(pre_trans1)
#Linear regression model on smaller dataset
modela_trans<-lm(log(Crime)~M+Ed+Po1+U2+Ineq+Prob,data = crime_data)
summary(modela_trans) # Model summary
pred_trans1<-predict(modela_trans, test) #Prediction on test data
#Converting prediction to the same scale
final1<-exp(pre_trans1)
#Converting prediction to the same scale
final1<-exp(pred_trans1)
#Linear regression model 3a on full dataset using model1
model1_trans<-lm(log(Crime)~.,data = crime_data)
summary(model1_trans)
pre_trans<-predict(model1_trans, test)
#Converting prediction to the same scale
final<-exp(pre_trans)
#Plotting model results
plot(model1_tans)
#Linear regression model 3a on full dataset using model1
model1_trans<-lm(log(Crime)~.,data = crime_data)
summary(model1_trans)
pre_trans<-predict(model1_trans, test)
#Converting prediction to the same scale
final<-exp(pre_trans)
#Plotting model results
plot(model1_trans)
#Linear regression model 3b on smaller dataset
modela_trans<-lm(log(Crime)~M+Ed+Po1+U2+Ineq+Prob,data = crime_data)
summary(modela_trans) # Model summary
pred_trans1<-predict(modela_trans, test) #Prediction on test data
#Converting prediction to the same scale
final1<-exp(pre_trans1)
#Linear regression model 3a on full dataset using model1
model1_trans<-lm(log(Crime)~.,data = crime_data)
summary(model1_trans)
pre_trans<-predict(model1_trans, test)
#Converting prediction to the same scale
final<-exp(pre_trans)
#Plotting model results
plot(model1_trans)
#Linear regression model 3b on smaller dataset
modela_trans<-lm(log(Crime)~M+Ed+Po1+U2+Ineq+Prob,data = crime_data)
summary(modela_trans) # Model summary
pred_trans1<-predict(modela_trans, test) #Prediction on test data
#Converting prediction to the same scale
final1<-exp(pred_trans1)
#Plotting model results
plot(modela_trans)
