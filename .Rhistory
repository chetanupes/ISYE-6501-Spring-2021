library(ggbiplot)
library(ggplot2)
#Getting the training and test data
crime_data<-read.table('uscrime.txt', sep = "", header = TRUE )
test<-read.table('test.txt', sep="", header = TRUE)
summary(crime_data)
install.packages('psych')
library(psych)
#Applying Principle component analysis
pca<-prcomp(X, scale. = TRUE, center = TRUE)
#Splitting the data to predictors and response
X<-crime_data[,1:15]
y<-crime_data[16]
#Applying Principle component analysis
pca<-prcomp(X, scale. = TRUE, center = TRUE)
pca$center
mean(crime_data$M)
mean(crime_data$So)
pca$scale
summary(pca)
sd(crime_data$So)
print(pca)
summary(pca)
#Plotting the results
pairs.panels(pca$x
gap=0)
#Plotting the results
pairs.panels(pca$x,
gap=0)
#Visualizing principle components using Bi-Plots
ggbiplot(pca, var.axes=TRUE)
#Visualizing principle components using Bi-Plots
ggbiplot(pca,
obs.scale=1,
var.axes=TRUE,
var.scale = 1,
groups = crime_data$Crime)
#Visualizing principle components using Bi-Plots
ggbiplot(pca,
obs.scale=1,
var.axes=TRUE,
var.scale = 1,
groups = crime_data$Crime,
circle = TRUE)
#Visualizing principle components using Bi-Plots
ggbiplot(pca,
obs.scale=1,
var.axes=TRUE,
var.scale = 1,
groups = crime_data$Crime,
circle = TRUE,
ellipse = TRUE)
#Visualizing principle components using Bi-Plots
ggbiplot(pca,
obs.scale=1,
var.axes=TRUE,
var.scale = 1,
groups = crime_data$Crime,
circle = TRUE,
ellipse = TRUE,
ellipse.prob = 0.68)
#Visualizing principle components using Bi-Plots
ggbiplot(pca,
obs.scale=1,
var.axes=TRUE,
var.scale = 1,
groups = crime_data$Crime,
circle = TRUE,
)
pca$x
#Creating a new data with the PC
new_data<-cbind(pca$x[,1:7], crime_data$Crime)
View(new_data)
View(new_data)
t<-predict(pca, X)
View(t)
View(t)
View(new_data)
View(new_data)
trunc <- pca$x[,1:4] %*% (pca$rotation[,1:4])
trunc <- pca$x[,1:4] %*% pca$rotation[,1:4]
trunc <- pca$x[,1:4] %*% t(pca$rotation[,1:4])
#and add the center (and re-scale) back to data
trunc <- scale(trunc, center = -1 * pca$center , scale=1/pca$scale)
dim(trunc); dim(X)
View(trunc)
View(trunc)
View(crime_data)
View(crime_data)
View(trunc)
View(trunc)
#Creating a new data with the PC
new_data<-cbind(trunc, crime_data$Crime)
View(new_data)
View(new_data)
View(new_data)
model<-lm(v16~.,data = new_data)
model<-lm(V16~.,data = new_data)
View(new_data)
View(new_data)
View(crime_data)
View(crime_data)
model<-lm(V16~.,data = new_data)
#Creating a new data with the PC
new_data<-as.data.frame(cbind(trunc, crime_data$Crime))
model<-lm(V16~.,data = new_data)
summary(model)
View(trunc)
View(trunc)
View(crime_data)
View(crime_data)
pred<-predict(model1, test)
pred<-predict(model, test)
screeplot(pca, type = "l")
str(pca)
plot(pca$x[,1],pca$x[,2])
pca.var<-pca$sdev^2
pca.var.per<-round(pca.var/sum(pca.var)*100,1)
plot(pca.var.per)
barplot(pca.var.per)
View(pca)
View(pca)
View(new_data)
View(new_data)
#Creating a new data with the PC
new_data<-as.data.frame(cbind(pca$x[,1:4], crime_data$Crime))
View(new_data)
View(new_data)
cor(new_data[,1:4],new_data[,5])
cor(new_data[,1:4])new_data[,5]
#Doing a Linear regression on our new model
model<-lm(V16~.,data = new_data)
summary(model)
#Creating a new data with the PC
new_data<-as.data.frame(cbind(pca$x[,1:4], crime_data$Crime))
#Doing a Linear regression on our new model
model<-lm(V16~.,data = new_data)
summary(model)
View(new_data)
View(new_data)
#Doing a Linear regression on our new model
model<-lm(V5~.,data = new_data)
summary(model)
#Creating a new data with the PC
new_data<-as.data.frame(cbind(pca$x[,1:2], crime_data$Crime))
#Doing a Linear regression on our new model
model<-lm(V5~.,data = new_data)
summary(model)
View(new_data)
View(new_data)
#Doing a Linear regression on our new model
model<-lm(V3~.,data = new_data)
summary(model)
#Creating a new data with the PC
new_data<-as.data.frame(cbind(pca$x[,1:4], crime_data$Crime))
View(new_data)
View(new_data)
#Doing a Linear regression on our new model
model<-lm(V5~.,data = new_data)
summary(model)
trunc <- pca$rotation[,1:4]%*%model$coefficients[-1]
View(trunc)
View(trunc)
#and add the center (and re-scale) back to data
trunc <- scale(trunc, center = -1 * pca$center , scale=1/pca$scale)
#and add the center (and re-scale) back to data
trunc <- scale(trunc, center = -1 * pca$center[,1:4] , scale=1/pca$scale[,1:4])
View(trunc)
View(trunc)
sapply(crime_data[,1:15], sd)
sapply(crime_data[,1:15], mean)
View(trunc)
View(trunc)
s<-sapply(crime_data[,1:15], sd)
m<-sapply(crime_data[,1:15], mean)
t<-trunc*s+m
View(t)
View(t)
View(trunc)
View(trunc)
t<-trunc/s
View(t)
View(t)
t<-sum(trunc/s)
#Finding the model coefficients in terms of the original variables
coeff <- pca$rotation[,1:4]%*%model$coefficients[-1]
View(coeff)
View(coeff)
coeff_new<-coeff/s
library(psych)
library(ggbiplot)
library(ggplot2)
#Getting the training and test data
crime_data<-read.table('uscrime.txt', sep = "", header = TRUE )
test<-read.table('test.txt', sep="", header = TRUE)
#Splitting the data to predictors and response
X<-crime_data[,1:15]
y<-crime_data[16]
#Applying Principle component analysis
pca<-prcomp(X, scale. = TRUE, center = TRUE)
#Understanding the results
print(pca)
summary(pca)
pairs.panels(pca$x, gap=0)
#Visualizing principle components using Bi-Plots
ggbiplot(pca,
obs.scale=1,
var.axes=TRUE,
var.scale = 1,
groups = crime_data$Crime,
circle = TRUE,
)
#Selecting number of PC using the variance plot
screeplot(pca, type = "l")
#Creating a new data with the PC
new_data<-as.data.frame(cbind(pca$x[,1:4], crime_data$Crime))
#Doing a Linear regression on our new model have 4 principle components
new_model<-lm(V5~.,data = new_data)
summary(new_model)
#Finding the model coefficients in terms of the original variables
coeff <- pca$rotation[,1:4]%*%model$coefficients[-1]
#Converting standardized betas back to original variables
s<-sapply(crime_data[,1:15], sd) #SD of each variable in the original dataset
m<-sapply(crime_data[,1:15], mean)#Mean of each variable in the original dataset
intecept<-new_model$coefficients[1]
intercept_new<-intercept-sum(coeff*m/s)
intercept<-new_model$coefficients[1]
coeff_new<-coeff/s
intercept_new<-intercept-sum(coeff*m/s)
#Finding the model coefficients in terms of the original variables
coeff <- pca$rotation[,1:4]%*%model$coefficients[-1]
#Finding the model coefficients in terms of the original variables
coeff <- pca$rotation[,1:4]%*%new_model$coefficients[-1]
#Converting standardized betas back to original variables
s<-sapply(crime_data[,1:15], sd) #SD of each variable in the original dataset
m<-sapply(crime_data[,1:15], mean)#Mean of each variable in the original dataset
intercept<-new_model$coefficients[1]
coeff_new<-coeff/s
intercept_new<-intercept-sum(coeff*m/s)
pred<-test%*%(intercept_new+coeff_new)
pred<-as.matrix(test)%*%(intercept_new+coeff_new)
pred<-as.matrix(X)%*%(intercept_new+coeff_new)
View(pred)
View(pred)
View(pred)
View(pred)
View(y)
View(y)
#Creating a new data with the PC
new_data<-as.data.frame(cbind(pca$x[,1:15], crime_data$Crime))
#Doing a Linear regression on our new model have 4 principle components
new_model<-lm(V5~.,data = new_data)
summary(new_model)
#Finding the model coefficients in terms of the original variables
coeff <- pca$rotation[,1:15]%*%new_model$coefficients[-1]
View(new_data)
View(new_data)
#Doing a Linear regression on our new model have 4 principle components
new_model<-lm(V16~.,data = new_data)
summary(new_model)
#Finding the model coefficients in terms of the original variables
coeff <- pca$rotation[,1:15]%*%new_model$coefficients[-1]
#Converting standardized betas back to original variables
s<-sapply(crime_data[,1:15], sd) #SD of each variable in the original dataset
m<-sapply(crime_data[,1:15], mean)#Mean of each variable in the original dataset
intercept<-new_model$coefficients[1]
coeff_new<-coeff/s
intercept_new<-intercept-sum(coeff*m/s)
pred<-as.matrix(X)%*%(intercept_new+coeff_new)
View(pred)
View(pred)
pred<-as.matrix(X)%*%(coeff_new+intercept_new)
View(coeff)
View(coeff)
View(coeff_new)
View(coeff_new)
pre<-predict(pca,X)
View(pre)
View(pre)
pre<-predict(pca,y)
pred<-as.matrix(X)%*%(coeff_new+intercept_new)
View(pred)
View(pred)
#Linear regression model
model1<-lm(Crime~.,data = crime_data)
summary(model1) # Model summary
pred<-predict(model1, test) #Prediction on test data
pre<-predict(pca,test)
View(pre)
View(pre)
pre<-as.matrix(test)%*%(coeff_new+intercept_new)
View(pre)
View(pre)
SSE = sum((pred - y)^2)
SStot = sum((y - mean(y))^2)
1 - SSE/SStot
#Creating a new data with the PC
new_data<-as.data.frame(cbind(pca$x[,1:4], crime_data$Crime))
#Doing a Linear regression on our new model have 4 principle components
new_model<-lm(V5~.,data = new_data)
summary(new_model)
#Finding the model coefficients in terms of the original variables
coeff <- pca$rotation[,1:4]%*%new_model$coefficients[-1]
#Converting standardized betas back to original variables
s<-sapply(crime_data[,1:4], sd) #SD of each variable in the original dataset
m<-sapply(crime_data[,1:4], mean)#Mean of each variable in the original dataset
intercept<-new_model$coefficients[1]
coeff_new<-coeff/s
intercept_new<-intercept-sum(coeff*m/s)
View(coeff_new)
View(coeff_new)
View(coeff)
View(coeff)
#Finding the model coefficients in terms of the original variables
coeff <- pca$rotation[,1:4]%*%new_model$coefficients[-1]
#Converting standardized betas back to original variables
s<-sapply(crime_data[,1:15], sd) #SD of each variable in the original dataset
m<-sapply(crime_data[,1:15], mean)#Mean of each variable in the original dataset
intercept<-new_model$coefficients[1]
coeff_new<-coeff/s
intercept_new<-intercept-sum(coeff*m/s)
pred<-as.matrix(X)%*%(coeff_new+intercept_new)
pre<-as.matrix(test)%*%(coeff_new+intercept_new)
SSE = sum((pred - y)^2)
SStot = sum((y - mean(y))^2)
1 - SSE/SStot
pred<-as.matrix(X)%*%coeff_new+intercept_new
View(pred)
View(pred)
View(crime_data)
View(crime_data)
pre<-as.matrix(test)%*%coeff_new+intercept_new
SSE = sum((pred - y)^2)
SStot = sum((y - mean(y))^2)
1 - SSE/SStot
R2 <- 1 - SSE/SStot
R2 - (1 - R2)*4/(nrow(data)-4-1)
pred<-as.matrix(X)%*%coeff_new+intercept_new
pre<-as.matrix(test)%*%coeff_new+intercept_new
SSE = sum((pred - y)^2)
SStot = sum((y - mean(y))^2)
library(psych)
library(ggbiplot)
library(ggplot2)
#Getting the training and test data
crime_data<-read.table('uscrime.txt', sep = "", header = TRUE )
test<-read.table('test.txt', sep="", header = TRUE)
#Splitting the data to predictors and response
X<-crime_data[,1:15]
y<-crime_data[16]
#Applying Principle component analysis
pca<-prcomp(X, scale. = TRUE, center = TRUE)
#Understanding the results
print(pca)
summary(pca)
pairs.panels(pca$x, gap=0)
#Visualizing principle components using Bi-Plots
ggbiplot(pca,
obs.scale=1,
var.axes=TRUE,
var.scale = 1,
groups = crime_data$Crime,
circle = TRUE,
)
#Selecting number of PC using the variance plot
screeplot(pca, type = "l")
#Creating a new data with the PC
new_data<-as.data.frame(cbind(pca$x[,1:4], crime_data$Crime))
#Doing a Linear regression on our new model have 4 principle components
new_model<-lm(V5~.,data = new_data)
summary(new_model)
#Finding the model coefficients in terms of the original variables
coeff <- pca$rotation[,1:4]%*%new_model$coefficients[-1]
#Converting standardized betas back to original variables
s<-sapply(crime_data[,1:15], sd) #SD of each variable in the original dataset
m<-sapply(crime_data[,1:15], mean)#Mean of each variable in the original dataset
intercept<-new_model$coefficients[1]
coeff_new<-coeff/s
intercept_new<-intercept-sum(coeff*m/s)
pred<-as.matrix(X)%*%coeff_new+intercept_new
pre<-as.matrix(test)%*%coeff_new+intercept_new
SSE = sum((pred - y)^2)
SStot = sum((y - mean(y))^2)
SStot = (y - mean(y))^2
SStot = (y - mean(y))^2
SStot = (y - mean(y)^2
SStot = (y - mean(y))^2
SStot = (y - mean(y))^2
mean(y)
mean(crime_data[,16])
SSE = sum((pred - crime_data[,16])^2)
SStot = sum((crime_data[,16] - mean(crime_data[,16]))^2)
1 - SSE/SStot
R2 <- 1 - SSE/SStot
R2 - (1 - R2)*4/(nrow(data)-4-1)
R2 - (1 - R2)*4/(nrow(X)-4-1)
#Linear regression model
model1<-lm(Crime~.,data = crime_data)
summary(model1) # Model summary
pred<-predict(model1, test) #Prediction on test data
anova(model,model1)
anova(new_model,model1)
anova(new_model)
