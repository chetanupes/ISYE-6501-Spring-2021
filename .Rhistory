install.packages('outliers')
library(outliers)
#Getting the data
data<-read.table('Crime Data.txt')
#Getting the data
data<-read.table('Crime Data.txt')
View(data)
View(data)
hist(data$V16)
View(data)
View(data)
hist(data$V16, sep = "", header = TRUE)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
View(data)
View(data)
hist(data$Crime)
boxplot(data$Crime)
#Doing some data exploration using vizualization
plot1<-qplot(data$Crime, geom='histogram')
library(ggplot2)
#Doing some data exploration using vizualization
plot1<-qplot(data$Crime, geom='histogram')
#Doing some data exploration using vizualization
qplot(data$Crime, geom='histogram')
qplot(data$Crime, geom='histogram', binwidth=50,
main = 'Histogram of Crime Rate', xlab = "Crime Rate" )
qplot(data$Crime, geom='histogram', binwidth=100,
main = 'Histogram of Crime Rate', xlab = "Crime Rate" )
qplot(data$Crime, geom='histogram',
main = 'Histogram of Crime Rate', xlab = "Crime Rate" )
qplot(data$Crime, geom='boxplot',
main = 'Histogram of Crime Rate', xlab = "Crime Rate" )
bp<-qplot(data$Crime, geom='boxplot',
main = 'Histogram of Crime Rate', xlab = "Crime Rate" )
bp+coord_flip()
library(outliers)
library(ggplot2)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
qplot(data$Crime, geom='histogram',
main = 'Histogram of Crime Rate', xlab = "Crime Rate" )
bp<-qplot(data$Crime, geom='boxplot',
main = 'Histogram of Crime Rate', xlab = "Crime Rate" )
bp+coord_flip()
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 10, opposite = FALSE, two.sided = FALSE)
View(test)
View(test)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 20, opposite = FALSE, two.sided = FALSE)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 11, opposite = FALSE, two.sided = FALSE)
test
qqnorm(data$Crime)
qqnorm(scale(data$Crime))
qqnorm(data$Crime, col = "steelblue", lwd = -2)
qqnorm(data$Crime)
qqline(data$Crime, col = "steelblue", lwd = 2)
qqplot(data$Crime)
qqplot(data$Crime)
install.packages('car')
library(car)
qqplot(data$Crime)
qqPlot(data$Crime)
qqPlot(log(data$Crime))
#Using Grubbs test
test<-grubbs.test(log(data$Crime), type = 11, opposite = FALSE, two.sided = FALSE)
test
#Using Grubbs test
test<-grubbs.test(log(data$Crime), type = 10, opposite = FALSE, two.sided = FALSE)
test
shapiro.test(data$Crime)
shapiro.test(log(data$Crime))
shapiro.test(data$Crime)
#Using Grubbs test
test<-grubbs.test(log(data$Crime), type = 10, opposite = FALSE, two.sided = FALSE)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 10, opposite = FALSE, two.sided = FALSE)
test
shapiro.test(data$Crime)
geom_histogram(alpha=0.5,color='red')
library(outliers)
library(ggplot2)
library(car)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Testing if the dataset (Crime rate) in question is normally distributed before applying
#Histogram
geom_histogram(alpha=0.5,color='red')
#Histogram
ggplot(data = data, aes(x = data$Crime)+geom_histogram(alpha=0.5,color='red')
#Histogram
ggplot(data = data, aes(x = data$Crime)+geom_histogram(color='red')
#Histogram
ggplot(data = data, aes(x = data$Crime)+geom_histogram(color='red')
bp<-qplot(data$Crime, geom='boxplot',
main = 'Histogram of Crime Rate', xlab = "Crime Rate" )
#Histogram
ggplot(data = data, aes(x = data$Crime)+geom_histogram(color='red'))
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Histogram
ggplot(data = data, aes(x = data$Crime)+geom_histogram(color='red'))
bp<-qplot(data$Crime, geom='boxplot',
main = 'Histogram of Crime Rate', xlab = "Crime Rate" )
#Histogram
ggplot(data = data, aes(x = data$Crime))+geom_histogram(color='red')
#Histogram
ggplot(data = data, aes(x = data$Crime))+geom_histogram()
ggplot(data = data, aes(x = data$Crime))+geom_density()
ggplot(data = data, aes(x = data$Crime))+geom_boxplot()
ggplot(data = data, aes(x = data$Crime))+geom_qq()
ggplot(data = data$Crime, aes(x = data$Crime))+geom_boxplot()
ggplot(data = data, aes(x = data$Crime))+geom_qq()
ggplot(data = data, aes(x = data$Crime))+ stat_qq() + stat_qq_line()
ggplot(data = data, aes(x = data$Crime))+ stat_qq() + stat_qq_line()
ggplot(data = data, aes(x = Crime))+ stat_qq() + stat_qq_line()
ggplot(data, aes(x = Crime))+ stat_qq() + stat_qq_line()
library(outliers)
library(ggplot2)
library(car)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Histogram
ggplot(data = data, aes(x = data$Crime))+geom_histogram()
ggplot(data = data, aes(x = data$Crime))+geom_density()
ggplot(data = data, aes(x = data$Crime))+geom_boxplot()
ggplot(data, aes(x = Crime))+ stat_qq() + stat_qq_line()
ggplot(data, aes(sample= Crime))+ stat_qq() + stat_qq_line()
#Shapiro-WilK test
test<-shapiro.test(data$Crime)
#Shapiro-WilK test
norm_test<-shapiro.test(data$Crime)
norm_test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 11, opposite = TRUE, two.sided = FALSE)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 10, opposite = TRUE, two.sided = FALSE)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 20, opposite = TRUE, two.sided = FALSE)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 20, opposite = TRUE, two.sided = FALSE)
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 10, opposite = TRUE, two.sided = FALSE)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 10, opposite = TRUE, two.sided = TRUE)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 10, opposite = FALSE, two.sided = TRUE)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 10, opposite = FALSE, two.sided = FALSE)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 20, opposite = FALSE, two.sided = FALSE)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 20, opposite = FALSE, two.sided = FALSE)
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 30, opposite = FALSE, two.sided = FALSE)
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 10, opposite = FALSE, two.sided = FALSE)
test
#Using Grubbs test
test<-grubbs.test(data$Crime, type = 10, opposite = FALSE, two.sided = FALSE)
test
#Now removing this data and see if there are other outliers
data2<-data[-which.max(data$Crime)]
View(data2)
View(data2)
#Test
norm_test<-shapiro.test(log(data$Crime))
norm_test
#Using Grubbs test
test<-grubbs.test(log(data$Crime), type = 10, opposite = FALSE, two.sided = FALSE)
test
#Test
norm_test<-shapiro.test(log(data$Crime))
norm_test
#Histogram
ggplot(data = data, aes(x = log(data$Crime))+geom_histogram()
library(outliers)
library(ggplot2)
library(car)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Testing if the dataset (Crime rate) in question is normally distributed before
#Testing if the dataset (Crime rate) in question is normally distributed before
#applying grubbs test. Normality is tested using Histogram, Q-Q Plot,
#Shapiro-WilK test
#Histogram
ggplot(data = data, aes(x = log(data$Crime))+geom_density()
#Histogram
ggplot(data = data, aes(x = Crime)+geom_histogram()
ggplot(data = data, aes(x = Crime)+geom_density()
#Q_Q Plot
#Q_Q Plot
ggplot(data, aes(sample= Crime)+ stat_qq() + stat_qq_line()
(outliers)
(outliers)
(outliers)
(outliers)
(outliers)
library(outliers)
library(ggplot2)
library(car)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Testing if the dataset (Crime rate) in question is normally distributed before
#Testing if the dataset (Crime rate) in question is normally distributed before
#applying grubbs test. Normality is tested using Histogram, Q-Q Plot,
#Shapiro-WilK test
#Histogram
ggplot(data = data, aes(x = Crime)+geom_density()
library(outliers)
library(ggplot2)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Testing if the dataset (Crime rate) in question is normally distributed before
#Testing if the dataset (Crime rate) in question is normally distributed before
#applying grubbs test. Normality is tested using Histogram, Q-Q Plot,
#Shapiro-WilK test
#Histogram
ggplot(data = data, aes(x = Crime)+geom_density()
#Q_Q Plot
#Histogram
ggplot(data = data, aes(x = data$Crime)+geom_histogram()
library(ggplot2)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Testing if the dataset (Crime rate) in question is normally distributed before
#Testing if the dataset (Crime rate) in question is normally distributed before
#applying grubbs test. Normality is tested using Histogram, Q-Q Plot,
#Shapiro-WilK test
#Histogram
ggplot(data = data, aes(x = data$Crime)+geom_density()
View(data)
View(data)
library(outliers)
library(ggplot2)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Testing if the dataset (Crime rate) in question is normally distributed before
#Testing if the dataset (Crime rate) in question is normally distributed before
#applying grubbs test. Normality is tested using Histogram, Q-Q Plot,
#Shapiro-WilK test
#Histogram
ggplot(data = data, aes(x = data$Crime)+geom_density()
#Q_Q Plot
#Test
norm_test<-shapiro.test(log(data$Crime))
norm_test
#Test
norm_test<-shapiro.test(data$Crime)
norm_test
#Histogram
ggplot(data = data, aes(x = data$Crime)+geom_histogram()
ggplot(data = data, aes(x = data$Crime)+geom_density()
#Histogram
ggplot(data = data$Crime, aes(x = data$Crime)+geom_histogram()
ggplot(data = data$Crime, aes(x = data$Crime)+geom_density()
library(ggplot2)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Testing if the dataset (Crime rate) in question is normally distributed before
#Testing if the dataset (Crime rate) in question is normally distributed before
#applying grubbs test. Normality is tested using Histogram, Q-Q Plot,
#Shapiro-WilK test
#Histogram
ggplot(data = data$Crime, aes(x = data$Crime)+geom_density()
#Q_Q Plot
#Test
norm_test<-shapiro.test(data$Crime)
#Test
norm_test<-shapiro.test(data$Crime)
norm_test
View(norm_test)
View(norm_test)
ggplot(data = data$Crime, aes(x = data$Crime)+geom_density()
test2<-
plot(data$Crime)
#Histogram
ggplot(data = data$Crime, aes(x = data$Crime)+geom_histogram()
install.packages(c("crayon", "dplyr", "RcppArmadillo"))
#Histogram
ggplot(data = data, aes(data$Crime)+geom_histogram()
ggplot(data = data, aes(data$Crime)+geom_density()
#Q_Q Plot
#Test
norm_test<-shapiro.test(data$Crime)
test2<-
hist(data$Crime)
test2<-
boxplot(data$Crime)
library(ggplot2)
#Histogram
ggplot(data = data, aes(data$Crime)+geom_histogram()
#Histogram
ggplot(data=data, aes(data$Crime)) +
geom_histogram()
#Histogram
ggplot(data=data, aes(data$Crime)) + geom_histogram()
ggplot(data=data, aes(data$Crime)+geom_density()
ggplot(data=data, aes(data$Crime)) + geom_histogram()
ggplot(data=data, aes(data$Crime)) + geom_histogram()
ggplot(data=data, aes(data$Crime)) + geom_density()
#Histogram
ggplot(data=data, aes(Crime)) + geom_histogram()
ggplot(data=data, aes(Crime)) + geom_density()
#Q_Q Plot
#Q_Q Plot
ggplot(data, aes(sample=Crime)+ stat_qq() + stat_qq_line()
#Q_Q Plot
ggplot(data, aes(sample=Crime)+ stat_qq() + stat_qq_line()
#Q_Q Plot
ggplot(data, aes(sample=Crime))+ stat_qq() + stat_qq_line()
library(outliers)
library(ggplot2)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Histogram
ggplot(data=data, aes(Crime)) + geom_histogram()
ggplot(data=data, aes(Crime)) + geom_density()
#Q_Q Plot
ggplot(data, aes(sample=Crime))+ stat_qq() + stat_qq_line()
ggplot(data,aes(data$Crime))+geom_boxplot()
#Using Grubbs test
test1<-grubbs.test(log(data$Crime), type = 10, opposite = FALSE,
two.sided = FALSE)
test1
#Using Grubbs test
test1<-grubbs.test(data$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test1
#Removing this data and see if there are other outliers
data2<-data[-which.max(data$Crime)]
test2
test2<-grubbs.test(data2$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test2
#Removing this data and see if there are other outliers
data2<-data[-which.max(data$Crime)]
test2<-grubbs.test(data2$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test2
View(data2)
View(data2)
#Removing this data and see if there are other outliers
data2<-data[-which(max(data$Crime))]
#Removing this data and see if there are other outliers
data2<-data[-which.max(data$Crime)]
#Removing this data and see if there are other outliers
data2<-data[-which.max(data$Crime),]
test2<-grubbs.test(data2$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test2
#Removing 1993 data
data3<-data2[-which.max(data$Crime),]
test3<-grubbs.test(data3$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test3
#Removing 1993 data
data3<-data2[-which.max(data$Crime),]
test3<-grubbs.test(data3$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test3
#Removing 1993 data
data3<-data2[-which.max(data2$Crime),]
test3<-grubbs.test(data3$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test3
library(outliers)
library(ggplot2)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Histogram
ggplot(data=data, aes(Crime)) + geom_histogram()
ggplot(data=data, aes(Crime)) + geom_density()
#Q_Q Plot
ggplot(data, aes(sample=Crime))+ stat_qq() + stat_qq_line()
#Q_Q Plot
ggplot(data, aes(sample=Crime))+ stat_qq() + stat_qq_line()
#Test 1
norm_test<-shapiro.test(data$Crime)
norm_test
ggplot(data,aes(data$Crime))+geom_boxplot()
#Using Grubbs test (alpha(sigificance level)=0.05)
test1<-grubbs.test(data$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test1
#Removing 1993 data
data2<-data[-which.max(data$Crime),]
test2<-grubbs.test(data2$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test2
#Removing 1969 data
data3<-data2[-which.max(data2$Crime),]
test3<-grubbs.test(data3$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test3
library(outliers)
library(ggplot2)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Histogram
ggplot(data=data, aes(Crime)) + geom_histogram()
#Q_Q Plot
ggplot(data, aes(sample=Crime))+ stat_qq() + stat_qq_line()
#Test 1
norm_test<-shapiro.test(data$Crime)
norm_test
ggplot(data,aes(data$Crime))+geom_boxplot()
#Using Grubbs test (alpha(sigificance level)=0.05)
test1<-grubbs.test(data$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test1
#Removing 1993 data
data2<-data[-which.max(data$Crime),]
ggplot(data,aes(Crime))+geom_boxplot()
#Using Grubbs test (alpha(sigificance level)=0.05)
test1<-grubbs.test(data$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test1
#Removing 1993 data
data2<-data[-which.max(data$Crime),]
test2<-grubbs.test(data2$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test2
#Removing 1969 data
data3<-data2[-which.max(data2$Crime),]
test3<-grubbs.test(data3$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test3
#test1 show point 1664 is not an outlier as p is much greater than alpha.
#test1 show point 1664 is not an outlier as p is much greater than alpha.
#We have now removed all the outliers
#test1 show point 1664 is not an outlier as p is much greater than alpha.
#We have now removed all the outliers
library(outliers)
library(ggplot2)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Histogram
ggplot(data=data, aes(Crime)) + geom_histogram()
#Q_Q Plot
ggplot(data, aes(sample=Crime))+ stat_qq() + stat_qq_line()
#Test 1
norm_test<-shapiro.test(data$Crime)
knitr::opts_chunk$set(echo = TRUE)
library(outliers)
library(ggplot2)
#Getting the data
data<-read.table('Crime Data.txt', sep = "", header = TRUE)
#Testing if the dataset (Crime rate) in question is normally distributed before
#applying grubbs test. Normality is tested using Histogram, Q-Q Plot,
#Shapiro-WilK test
#Histogram
ggplot(data=data, aes(Crime)) + geom_histogram()
#Q_Q Plot
ggplot(data, aes(sample=Crime))+ stat_qq() + stat_qq_line()
#Shapiro-WilK test
#Stating the hypothesis, threshold alpha=0.05 (significance level)
#H0: The data is normally distributed
#H1: The data is not normally distributed.
#Test 1
norm_test<-shapiro.test(data$Crime)
norm_test
#Since p value for the test is less than than the chosen threshold the null
#hypotheses is rejected and the data used in this test is not normally
#distributed. A log normal transformation can be achieve normality or by
#removing the outliers as Shapiro test is sensitive to sample size, meaning if
# sample size is sufficiently large this test may detect even trivial departures
#from the null hypothesis. So we will assume the data to to normally distributed
#as also evident from the Q-Q plot where most of the data lies in a st. line.
#Outlier detection using Box plot
ggplot(data,aes(Crime))+geom_boxplot()
#The box plot shows that there might be few points as outliers. We can now
#perform Grubbs Test
#Using Grubbs test (alpha(sigificance level)=0.05)
test1<-grubbs.test(data$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test1
#test1 show point 1993 is an outlier is an outlier as is close to alpha.Next we will remove
#this point and continue to investigate if we have more outliers.
#Removing 1993 data
data2<-data[-which.max(data$Crime),]
test2<-grubbs.test(data2$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test2
#test1 show point 1969 is an outlier as is close to alpha.Next we will remove
#this point and continue to investigate if we have more outliers.
#Removing 1969 data
data3<-data2[-which.max(data2$Crime),]
test3<-grubbs.test(data3$Crime, type = 10, opposite = FALSE,
two.sided = FALSE)
test3
#test1 show point 1664 is not an outlier as p is much greater than alpha.
#We have now removed all the outliers
